# Header
Find: DefinitionBlock ("", "SSDT", 1, "DpgPmm", "CpuPm", 0x00000010)
Replace: DefinitionBlock ("", "SSDT", 1, "APPLE", "CpuPm", 0x00003000)

# Fix \_PR aliases
into_all all code_regex _PR_ replaceall_matched begin \\_PR_ end;
into scope label _PR.CPU0 set_label begin \_PR.CPU0 end;
into scope label _PR.CPU1 set_label begin \_PR.CPU1 end;
into scope label _PR.CPU2 set_label begin \_PR.CPU2 end;
into scope label _PR.CPU3 set_label begin \_PR.CPU3 end;

# Add SDTL
into scope label \ insert
begin
Name (\SDTL, 0x33)
end;

# Replace _PDC method
# CPU 0
into method label _PDC parent_label \_PR.CPU0 remove_entry;
into scope label \_PR.CPU0 insert
begin
Method (_PDC, 1, NotSerialized)\n
{\n
    CreateDWordField (Arg0, 0x00, REVS)\n
    CreateDWordField (Arg0, 0x04, SIZE)\n
    Store (SizeOf (Arg0), Local0)\n
    Store (Subtract (Local0, 0x08), Local1)\n
    CreateField (Arg0, 0x40, Multiply (Local1, 0x08), TEMP)\n
    Name (STS0, Buffer (0x04)\n
    {\n
        0x00, 0x00, 0x00, 0x00\n
    })\n
    Concatenate (STS0, TEMP, Local2)\n
    _OSC (Buffer (0x10)\n
    {\n
        0x16, 0xA6, 0x77, 0x40, 0x0C, 0x29, 0xBE, 0x47,\n
        0x9E, 0xBD, 0xD8, 0x70, 0x58, 0x71, 0x39, 0x53\n
    }, REVS, SIZE, Local2)\n
}\n
end;

into method label _OSC parent_label \_PR.CPU0 remove_entry;
into scope label \_PR.CPU0 insert
begin
Method (_OSC, 4, NotSerialized)\n
{\n
    CreateDWordField (Arg3, 0x00, STS0)\n
    CreateDWordField (Arg3, 0x04, CAP0)\n
    CreateDWordField (Arg0, 0x00, IID0)\n
    CreateDWordField (Arg0, 0x04, IID1)\n
    CreateDWordField (Arg0, 0x08, IID2)\n
    CreateDWordField (Arg0, 0x0C, IID3)\n
    Name (UID0, Buffer (0x10)\n
    {\n
        0x16, 0xA6, 0x77, 0x40, 0x0C, 0x29, 0xBE, 0x47,\n
        0x9E, 0xBD, 0xD8, 0x70, 0x58, 0x71, 0x39, 0x53\n
    })\n
    CreateDWordField (UID0, 0x00, EID0)\n
    CreateDWordField (UID0, 0x04, EID1)\n
    CreateDWordField (UID0, 0x08, EID2)\n
    CreateDWordField (UID0, 0x0C, EID3)\n
    If (LNot (LAnd (LAnd (LEqual (IID0, EID0), LEqual (IID1, EID1)),\n
    LAnd (LEqual (IID2, EID2), LEqual (IID3, EID3)))))\n
    {\n
        Store (0x06, Index (STS0, 0x00))\n
        Return (Arg3)\n
    }\n
    If (LNotEqual (Arg1, 0x01))\n
    {\n
        Store (0x0A, Index (STS0, 0x00))\n
        Return (Arg3)\n
    }\n

    Or (And (PDC0, 0x7FFFFFFF), CAP0, PDC0)\n
    Return (Arg3)\n
}\n
end;

# CPU1
into method label _PDC parent_label \_PR.CPU1 remove_entry;
into scope label \_PR.CPU1 insert
begin
Method (_PDC, 1, NotSerialized)\n
{\n
    CreateDWordField (Arg0, 0x00, REVS)\n
    CreateDWordField (Arg0, 0x04, SIZE)\n
    Store (SizeOf (Arg0), Local0)\n
    Store (Subtract (Local0, 0x08), Local1)\n
    CreateField (Arg0, 0x40, Multiply (Local1, 0x08), TEMP)\n
    Name (STS1, Buffer (0x04)\n
    {\n
        0x00, 0x00, 0x00, 0x00\n
    })\n
    Concatenate (STS1, TEMP, Local2)\n
    _OSC (Buffer (0x10)\n
    {\n
        0x16, 0xA6, 0x77, 0x40, 0x0C, 0x29, 0xBE, 0x47,\n
        0x9E, 0xBD, 0xD8, 0x70, 0x58, 0x71, 0x39, 0x53\n
    }, REVS, SIZE, Local2)\n
}\n
end;

into method label _OSC parent_label \_PR.CPU1 remove_entry;
into scope label \_PR.CPU1 insert
begin
Method (_OSC, 4, NotSerialized)\n
{\n
    CreateDWordField (Arg3, 0x00, STS1)\n
    CreateDWordField (Arg3, 0x04, CAP1)\n
    CreateDWordField (Arg0, 0x00, IID0)\n
    CreateDWordField (Arg0, 0x04, IID1)\n
    CreateDWordField (Arg0, 0x08, IID2)\n
    CreateDWordField (Arg0, 0x0C, IID3)\n
    Name (UID1, Buffer (0x10)\n
    {\n
        0x16, 0xA6, 0x77, 0x40, 0x0C, 0x29, 0xBE, 0x47,\n
        0x9E, 0xBD, 0xD8, 0x70, 0x58, 0x71, 0x39, 0x53\n
    })\n
    CreateDWordField (UID1, 0x00, EID0)\n
    CreateDWordField (UID1, 0x04, EID1)\n
    CreateDWordField (UID1, 0x08, EID2)\n
    CreateDWordField (UID1, 0x0C, EID3)\n
    If (LNot (LAnd (LAnd (LEqual (IID0, EID0), LEqual (IID1, EID1)),\n
    LAnd (LEqual (IID2, EID2), LEqual (IID3, EID3)))))\n
    {\n
        Store (0x06, Index (STS1, 0x00))\n
        Return (Arg3)\n
    }\n
    If (LNotEqual (Arg1, 0x01))\n
    {\n
        Store (0x0A, Index (STS1, 0x00))\n
        Return (Arg3)\n
    }\n

    Or (And (PDC1, 0x7FFFFFFF), CAP1, PDC1)\n
    Return (Arg3)\n
}\n
end;

# CPU2
#into method label _PDC parent_label \_PR.CPU2 remove_entry;
#into method label _OSC parent_label \_PR.CPU2 remove_entry;
into scope label \_PR.CPU2 remove_entry;

# CPU3
#into method label _PDC parent_label \_PR.CPU3 remove_entry;
#into method label _OSC parent_label \_PR.CPU3 remove_entry;
into scope label \_PR.CPU3 remove_entry;