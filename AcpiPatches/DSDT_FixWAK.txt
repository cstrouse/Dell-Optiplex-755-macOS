# PNOT
into definitionblock code_regex . insert
begin
Method (PNOT, 0, Serialized)\n
{\n
    External (\PDC0, IntObj)\n
    External (\PDC1, IntObj)\n
    External (\PDC2, IntObj)\n
    External (\PDC3, IntObj)\n

    Name (MPEN, One)\n
    If (MPEN)\n
    {\n
        If (And (PDC0, 0x08))\n
        {\n
            Notify (\_PR.CPU0, 0x80)\n
            If (And (PDC0, 0x10))\n
            {\n
                Sleep (0x64)\n
                Notify (\_PR.CPU0, 0x81)\n
            }\n
        }\n

        If (And (PDC1, 0x08))\n
        {\n
            Notify (\_PR.CPU1, 0x80)\n
            If (And (PDC1, 0x10))\n
            {\n
                Sleep (0x64)\n
                Notify (\_PR.CPU1, 0x81)\n
            }\n
        }\n
        
        If (And (PDC2, 0x08))\n
        {\n
            Notify (\_PR.CPU2, 0x80)\n
            If (And (PDC2, 0x10))\n
            {\n
                Sleep (0x64)\n
                Notify (\_PR.CPU2, 0x81)\n
            }\n
        }\n
        
        If (And (PDC3, 0x08))\n
        {\n
            Notify (\_PR.CPU3, 0x80)\n
            If (And (PDC3, 0x10))\n
            {\n
                Sleep (0x64)\n
                Notify (\_PR.CPU3, 0x81)\n
            }\n
        }\n
    }\n
    Else
    {\n
        Notify (\_PR.CPU0, 0x80)\n
        Sleep (0x64)\n
        Notify (\_PR.CPU0, 0x81)\n
    }\n
}\n
end;

# Fix _WAK and call PNOT
into method label _WAK code_regex Return\s\(Zero\) replace_matched
begin
PNOT ()\n
Return (Package (0x02)\n
{\n
    Zero,\n
    Zero\n
})\n
end;