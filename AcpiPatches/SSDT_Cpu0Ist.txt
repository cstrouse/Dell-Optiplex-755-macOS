Find: DefinitionBlock ("", "SSDT", 1, "DpgPmm", "Cpu0Ist", 0x00000011)
Replace: DefinitionBlock ("", "SSDT", 1, "APPLE", "Cpu0Ist", 0x00003000)

into_all all code_regex _PR_.CPU0 replace_matched begin \\_PR_.CPU0 end;
into scope label _PR.CPU0 set_label begin \_PR.CPU0 end;

# Change _PCT logic
into_all all code_regex If\s\(LAnd\s\(LNot\s\(And\s\(CFGD,\s0x4000\)\)((?:.)*)\n\s*0x09\)\)\) replaceall_matched
begin
If (LAnd (And (CFGD, 0x01), And (PDC0, 0x01)))
end;

# Change _PCT resources


Find: 0x0000000000000199
Replace: 0x0000000000000000

Find: 0x0000000000000198
Replace: 0x0000000000000000

into_all all code_regex Register\s\(FFixedHW,((?:.)*)\n\s*((?:.)*), replaceall_matched begin Register (FFixedHW, 0x00, end;

# Patch _PSS
into_all all code_regex If\s\(LAnd\s\(And\s\(CFGD,\s0x01\),\sAnd\s\(PDC0,\s0x01\)\)\)\n\s*\{\n\s*Return\s\(NPSS\) replaceall_matched
begin
External (OSDW, MethodObj)\n
If (LOr(And (PDC0, 0x01), OSDW()))\n
{\n
Return (NPSS)
end;

# Insert _PSD
into scope label \_PR.CPU0 insert
begin
Method (_PSD, 0, NotSerialized)\n
{\n
If (And (CFGD, 0x01000000))\n
{\n
If (And (PDC0, 0x0800))\n
{\n
Return (Package (0x01)\n
{\n
Package (0x05)\n
{\n
0x05,\n
0x00,\n
0x00,\n
0xFE,\n
0x02\n
}\n
})\n
}\n
\n
Return (Package (0x01)\n
{\n
Package (0x05)\n
{\n
0x05,\n
0x00,\n
0x00,\n
0xFC,\n
0x02\n
}\n
})\n
}\n
\n
Return (Package (0x01)\n
{\n
Package (0x05)\n
{\n
0x05,\n
0x00,\n
0x00,\n
0xFC,\n
0x01\n
}\n
})\n
}
end;